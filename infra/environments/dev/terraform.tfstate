{
    "version": 3,
    "terraform_version": "0.11.10",
    "serial": 1,
    "lineage": "83d3cc7b-fe8b-adc7-20c4-feb0669a9c92",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "infra",
                "elasticsearch"
            ],
            "outputs": {
                "elasticsearch_client_endpoint": {
                    "sensitive": false,
                    "type": "string",
                    "value": "elasticsearch-client.elasticsearch.svc.cluster.local"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "infra",
                "fluentd"
            ],
            "outputs": {},
            "resources": {
                "helm_release.fluentd": {
                    "type": "helm_release",
                    "depends_on": [],
                    "primary": {
                        "id": "fluentd",
                        "attributes": {
                            "chart": "stable/fluentd-elasticsearch",
                            "disable_webhooks": "false",
                            "force_update": "false",
                            "id": "fluentd",
                            "keyring": "/Users/timothypark/.gnupg/pubring.gpg",
                            "metadata.#": "1",
                            "metadata.0.chart": "fluentd-elasticsearch",
                            "metadata.0.name": "fluentd",
                            "metadata.0.namespace": "fluentd",
                            "metadata.0.revision": "1",
                            "metadata.0.status": "DEPLOYED",
                            "metadata.0.values": "elasticsearch:\n  host: elasticsearch-client.elasticsearch.svc.cluster.local\n",
                            "metadata.0.version": "1.1.0",
                            "name": "fluentd",
                            "namespace": "fluentd",
                            "recreate_pods": "false",
                            "reuse": "false",
                            "reuse_values": "false",
                            "set.#": "1",
                            "set.2631414375.name": "elasticsearch.host",
                            "set.2631414375.value": "elasticsearch-client.elasticsearch.svc.cluster.local",
                            "timeout": "1800",
                            "verify": "false",
                            "version": "1.1.0",
                            "wait": "true"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.helm"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "infra",
                "grafana"
            ],
            "outputs": {},
            "resources": {
                "data.template_file.template_grafana_yaml": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "4f6264d1582b7de0e621bf2fe65188b59c92f676e5fbb664b64e318df031958d",
                        "attributes": {
                            "id": "4f6264d1582b7de0e621bf2fe65188b59c92f676e5fbb664b64e318df031958d",
                            "rendered": "datasources: \n  datasources.yaml:\n    apiVersion: 1\n    datasources:\n    - name: Prometheus\n      type: prometheus\n      url: http://prometheus-server.prometheus.svc.cluster.local\n      access: proxy\n      isDefault: true\ndashboardProviders: \n  dashboardproviders.yaml:\n    apiVersion: 1\n    providers:\n    - name: 'default'\n      orgId: 1\n      folder: ''\n      type: file\n      disableDeletion: false\n      editable: true\n      options:\n        path: /var/lib/grafana/dashboards/default\ndashboards:\n  default:\n    cluster-metrics:\n      gnetId: 6417\n      revision: 1\n      datasource: Prometheus\n    persistent-volumes:\n      gnetId: 6739\n      revision: 1\n      datasource: Prometheus\n\npersistence:\n  enabled: true\n  storageClassName: 'default'\n  accessModes:\n    - ReadWriteOnce\n  size: 4Gi\nplugins:\n  - digrich-bubblechart-panel\n  - grafana-clock-panel",
                            "template": "datasources: \n  datasources.yaml:\n    apiVersion: 1\n    datasources:\n    - name: Prometheus\n      type: prometheus\n      url: http://${prometheus_service_endpoint}\n      access: proxy\n      isDefault: true\ndashboardProviders: \n  dashboardproviders.yaml:\n    apiVersion: 1\n    providers:\n    - name: 'default'\n      orgId: 1\n      folder: ''\n      type: file\n      disableDeletion: false\n      editable: true\n      options:\n        path: /var/lib/grafana/dashboards/default\ndashboards:\n  default:\n    cluster-metrics:\n      gnetId: 6417\n      revision: 1\n      datasource: Prometheus\n    persistent-volumes:\n      gnetId: 6739\n      revision: 1\n      datasource: Prometheus\n${dashboard_yaml}\npersistence:\n  enabled: ${persistence_enabled}\n  storageClassName: '${storage_class}'\n  accessModes:\n    - ReadWriteOnce\n  size: ${storage_size}\nplugins:\n  - digrich-bubblechart-panel\n  - grafana-clock-panel",
                            "vars.%": "5",
                            "vars.dashboard_yaml": "",
                            "vars.persistence_enabled": "true",
                            "vars.prometheus_service_endpoint": "prometheus-server.prometheus.svc.cluster.local",
                            "vars.storage_class": "default",
                            "vars.storage_size": "4Gi"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "null_resource.generate_grafana_yaml": {
                    "type": "null_resource",
                    "depends_on": [
                        "data.template_file.template_grafana_yaml"
                    ],
                    "primary": {
                        "id": "2926389431648480688",
                        "attributes": {
                            "id": "2926389431648480688"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "infra",
                "jaeger"
            ],
            "outputs": {
                "agent_endpoint": {
                    "sensitive": false,
                    "type": "string",
                    "value": "jaeger-agent.default.svc.cluster.local"
                }
            },
            "resources": {
                "data.template_file.jaeger": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "42c5305ba696b0c85934510871902e6f4b0ed33c872721c47dd54aa3e69cf220",
                        "attributes": {
                            "id": "42c5305ba696b0c85934510871902e6f4b0ed33c872721c47dd54aa3e69cf220",
                            "rendered": "apiVersion: io.jaegertracing/v1alpha1\nkind: Jaeger\nmetadata:\n  name: jaeger\nspec:\n  agent:\n    strategy: DaemonSet\n  ingress:\n    enabled: false\n  strategy: production\n  storage:\n    type: elasticsearch\n    options:\n      es:\n        server-urls: http://elasticsearch-client.elasticsearch.svc.cluster.local:9200\n",
                            "template": "apiVersion: io.jaegertracing/v1alpha1\nkind: Jaeger\nmetadata:\n  name: ${name}\nspec:\n  agent:\n    strategy: DaemonSet\n  ingress:\n    enabled: false\n  strategy: production\n  storage:\n    type: elasticsearch\n    options:\n      es:\n        server-urls: http://${elasticsearch_client_endpoint}:9200\n",
                            "vars.%": "3",
                            "vars.elasticsearch_client_endpoint": "elasticsearch-client.elasticsearch.svc.cluster.local",
                            "vars.name": "jaeger",
                            "vars.namespace": "default"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "null_resource.generate_jaeger_operator_yaml": {
                    "type": "null_resource",
                    "depends_on": [
                        "data.template_file.jaeger",
                        "data.template_file.jaeger"
                    ],
                    "primary": {
                        "id": "1199297637989351621",
                        "attributes": {
                            "id": "1199297637989351621"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null"
                },
                "null_resource.jaeger_crd": {
                    "type": "null_resource",
                    "depends_on": [
                        "null_resource.jaeger_operator"
                    ],
                    "primary": {
                        "id": "2743463674791845429",
                        "attributes": {
                            "id": "2743463674791845429"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null"
                },
                "null_resource.jaeger_deployment": {
                    "type": "null_resource",
                    "depends_on": [
                        "null_resource.generate_jaeger_operator_yaml",
                        "null_resource.jaeger_crd"
                    ],
                    "primary": {
                        "id": "4070845192990842277",
                        "attributes": {
                            "id": "4070845192990842277"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null"
                },
                "null_resource.jaeger_operator": {
                    "type": "null_resource",
                    "depends_on": [
                        "null_resource.jaeger_role_binding"
                    ],
                    "primary": {
                        "id": "5284678416689539384",
                        "attributes": {
                            "id": "5284678416689539384"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null"
                },
                "null_resource.jaeger_role": {
                    "type": "null_resource",
                    "depends_on": [
                        "null_resource.jaeger_service_account"
                    ],
                    "primary": {
                        "id": "8659830837522178595",
                        "attributes": {
                            "id": "8659830837522178595"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null"
                },
                "null_resource.jaeger_role_binding": {
                    "type": "null_resource",
                    "depends_on": [
                        "null_resource.jaeger_role"
                    ],
                    "primary": {
                        "id": "4674083828424497332",
                        "attributes": {
                            "id": "4674083828424497332"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null"
                },
                "null_resource.jaeger_service": {
                    "type": "null_resource",
                    "depends_on": [
                        "null_resource.jaeger_crd"
                    ],
                    "primary": {
                        "id": "353292035723046322",
                        "attributes": {
                            "id": "353292035723046322"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null"
                },
                "null_resource.jaeger_service_account": {
                    "type": "null_resource",
                    "depends_on": [],
                    "primary": {
                        "id": "6578011426924181526",
                        "attributes": {
                            "id": "6578011426924181526"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "infra",
                "kibana"
            ],
            "outputs": {},
            "resources": {
                "data.template_file.kibana_yaml": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "0c9e52bbc69a270799675e182cb6bb5621f2b9121b5f675bb1170ee1af0b9d33",
                        "attributes": {
                            "id": "0c9e52bbc69a270799675e182cb6bb5621f2b9121b5f675bb1170ee1af0b9d33",
                            "rendered": "files:\n  kibana.yml:\n    elasticsearch.url: http://elasticsearch-client.elasticsearch.svc.cluster.local:9200",
                            "template": "files:\n  kibana.yml:\n    elasticsearch.url: http://${elasticsearch_client_endpoint}:9200",
                            "vars.%": "1",
                            "vars.elasticsearch_client_endpoint": "elasticsearch-client.elasticsearch.svc.cluster.local"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "null_resource.generate_kibana_yaml": {
                    "type": "null_resource",
                    "depends_on": [
                        "data.template_file.kibana_yaml",
                        "data.template_file.kibana_yaml"
                    ],
                    "primary": {
                        "id": "3563577368114135848",
                        "attributes": {
                            "id": "3563577368114135848"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "infra",
                "kured"
            ],
            "outputs": {},
            "resources": {
                "helm_release.kured": {
                    "type": "helm_release",
                    "depends_on": [],
                    "primary": {
                        "id": "kured",
                        "attributes": {
                            "chart": "stable/kured",
                            "disable_webhooks": "false",
                            "force_update": "false",
                            "id": "kured",
                            "keyring": "/Users/timothypark/.gnupg/pubring.gpg",
                            "metadata.#": "1",
                            "metadata.0.chart": "kured",
                            "metadata.0.name": "kured",
                            "metadata.0.namespace": "kube-system",
                            "metadata.0.revision": "1",
                            "metadata.0.status": "DEPLOYED",
                            "metadata.0.values": "extraArgs:\n  prometheus-url: http://prometheus-server.prometheus.svc.cluster.local\n",
                            "metadata.0.version": "0.1.0",
                            "name": "kured",
                            "namespace": "kube-system",
                            "recreate_pods": "false",
                            "reuse": "false",
                            "reuse_values": "false",
                            "set.#": "1",
                            "set.2284714218.name": "extraArgs.prometheus-url",
                            "set.2284714218.value": "http://prometheus-server.prometheus.svc.cluster.local",
                            "timeout": "1800",
                            "verify": "false",
                            "version": "0.1.0",
                            "wait": "true"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.helm"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "infra",
                "prometheus"
            ],
            "outputs": {
                "prometheus_service_endpoint": {
                    "sensitive": false,
                    "type": "string",
                    "value": "prometheus-server.prometheus.svc.cluster.local"
                }
            },
            "resources": {
                "helm_release.prometheus": {
                    "type": "helm_release",
                    "depends_on": [],
                    "primary": {
                        "id": "prometheus",
                        "attributes": {
                            "chart": "stable/prometheus",
                            "disable_webhooks": "false",
                            "force_update": "false",
                            "id": "prometheus",
                            "keyring": "/Users/timothypark/.gnupg/pubring.gpg",
                            "metadata.#": "1",
                            "metadata.0.chart": "prometheus",
                            "metadata.0.name": "prometheus",
                            "metadata.0.namespace": "prometheus",
                            "metadata.0.revision": "1",
                            "metadata.0.status": "DEPLOYED",
                            "metadata.0.values": "alertmanager:\n  persistentVolume:\n    storageClass: default\nserver:\n  persistentVolume:\n    size: 4Gi\n    storageClass: default\n",
                            "metadata.0.version": "7.3.4",
                            "name": "prometheus",
                            "namespace": "prometheus",
                            "recreate_pods": "false",
                            "reuse": "false",
                            "reuse_values": "false",
                            "set.#": "3",
                            "set.1721032798.name": "alertmanager.persistentVolume.storageClass",
                            "set.1721032798.value": "default",
                            "set.363297587.name": "server.persistentVolume.storageClass",
                            "set.363297587.value": "default",
                            "set.3633760590.name": "server.persistentVolume.size",
                            "set.3633760590.value": "4Gi",
                            "timeout": "1800",
                            "verify": "false",
                            "version": "7.3.4",
                            "wait": "true"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.helm"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "infra",
                "traefik"
            ],
            "outputs": {},
            "resources": {
                "data.template_file.traefik": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "002f051dd95140a837843e4dddc8aa23aaae370dc51a42513249b61b0296a29a",
                        "attributes": {
                            "id": "002f051dd95140a837843e4dddc8aa23aaae370dc51a42513249b61b0296a29a",
                            "rendered": "cpuLimit: 250m\ndashboard:\n  enabled: true\n  auth: {}\nmemoryLimit: 128Mi\nmetrics:\n  prometheus:\n    enabled: true\nrbac:\n  enabled: true\nservice:\n  annotations:\n    prometheus.io/scrape: 'true'\n    prometheus.io/port: 8080\nssl:\n  enabled: false\n  enforced: false\n  defaultCert: \n  defaultKey: \n",
                            "template": "cpuLimit: 250m\ndashboard:\n  enabled: true\n  auth: {}\nmemoryLimit: 128Mi\nmetrics:\n  prometheus:\n    enabled: ${prometheus_enabled}\nrbac:\n  enabled: true\nservice:\n  annotations:\n    prometheus.io/scrape: 'true'\n    prometheus.io/port: 8080\nssl:\n  enabled: ${ssl_enabled}\n  enforced: ${ssl_enforced}\n  defaultCert: ${ssl_cert_base64}\n  defaultKey: ${ssl_key_base64}\n",
                            "vars.%": "7",
                            "vars.jaeger_agent_endpoint": "jaeger-agent.default.svc.cluster.local",
                            "vars.prometheus_enabled": "true",
                            "vars.ssl_cert_base64": "",
                            "vars.ssl_enabled": "false",
                            "vars.ssl_enforced": "false",
                            "vars.ssl_key_base64": "",
                            "vars.tracing_enabled": "true"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "null_resource.generate_traefik_config": {
                    "type": "null_resource",
                    "depends_on": [
                        "data.template_file.traefik",
                        "data.template_file.traefik"
                    ],
                    "primary": {
                        "id": "4181560162842172363",
                        "attributes": {
                            "id": "4181560162842172363"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null"
                }
            },
            "depends_on": []
        }
    ]
}
